{"version":3,"sources":["../src/util.js"],"names":["require","Launcher","path","escapeHtml","string","replace","match","escapeSingleQuote","createChromeLauncher","startingUrl","options","flags","push","process","platform","visible","chromeFlags","Array","isArray","forEach","f","indexOf","Error","additionalChromeFlags","console","warn","params","port","logLevel","chromePath","completeUrl","url","reg","RegExp","test","join","cwd","exports"],"mappings":";;eAAmBA,QAAQ,iBAAR,C;IAAZC,Q,YAAAA,Q;;AACP,IAAMC,OAAOF,QAAQ,MAAR,CAAb;;AAEA;AACA,SAASG,UAAT,CAAqBC,MAArB,EAA6B;AAC3B,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,WAAOA,MAAP;AACD;AACD,SAAOA,OAAOC,OAAP,CAAe,WAAf,EAA4B,UAAUC,KAAV,EAAiB;AAClD,WAAO;AACL,WAAK,OADA;AAEL,YAAM,QAFD;AAGL,WAAK,QAHA;AAIL,WAAK,QAJA;AAKL,WAAK,MALA;AAML,WAAK;AANA,MAOLA,KAPK,CAAP;AAQD,GATM,CAAP;AAUD;;AAED,SAASC,iBAAT,CAA4BH,MAA5B,EAAoC;AAClC,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,WAAOA,MAAP;AACD;AACD,SAAOA,OAAOC,OAAP,CAAe,IAAf,EAAqB,MAArB,CAAP;AACD;;AAED,SAASG,oBAAT,CAA+BC,WAA/B,EAA4CC,OAA5C,EAAqD;AACnD,MAAMC,QAAQ,EAAd;AACA;AACAA,QAAMC,IAAN,CAAW,eAAX;AACA;AACA;AACA;AACA,MAAIC,QAAQC,QAAR,KAAqB,OAAzB,EAAkC;AAChCH,UAAMC,IAAN,CAAW,cAAX;AACD;AACD,MAAI,CAACF,QAAQK,OAAb,EAAsB;AACpBJ,UAAMC,IAAN,CAAW,YAAX;AACAD,UAAMC,IAAN,CAAW,mBAAX;AACD;AACD,MAAIF,QAAQM,WAAR,IAAuBC,MAAMC,OAAN,CAAcR,QAAQM,WAAtB,CAA3B,EAA+D;AAC7DN,YAAQM,WAAR,CAAoBG,OAApB,CAA4B,aAAK;AAC/B,UAAIC,EAAEC,OAAF,CAAU,IAAV,MAAoB,CAAC,CAAzB,EAA4B;AAC1B,cAAM,IAAIC,KAAJ,CAAU,gFAAgFF,CAA1F,CAAN;AACD;AACDT,YAAMC,IAAN,CAAWQ,CAAX;AACD,KALD;AAMD;AACD,MAAIV,QAAQa,qBAAR,IAAiCN,MAAMC,OAAN,CAAcR,QAAQa,qBAAtB,CAArC,EAAmF;AACjFC,YAAQC,IAAR,CAAa,gFAAb;AACAf,YAAQa,qBAAR,CAA8BJ,OAA9B,CAAsC,aAAK;AACzC,UAAIC,EAAEC,OAAF,CAAU,IAAV,MAAoB,CAAC,CAAzB,EAA4B;AAC1B,cAAM,IAAIC,KAAJ,CAAU,gFAAgFF,CAA1F,CAAN;AACD;AACDT,YAAMC,IAAN,CAAWQ,CAAX;AACD,KALD;AAMD;AACD,MAAMM,SAAS;AACbC,UAAMjB,QAAQiB,IADD;AAEbX,iBAAaL,KAFA;AAGbF,iBAAaA,WAHA;AAIbmB,cAAU;AAJG,GAAf;AAMA,MAAIlB,QAAQmB,UAAZ,EAAwB;AACtBH,WAAOG,UAAP,GAAoBnB,QAAQmB,UAA5B;AACD;AACD,SAAO,IAAI5B,QAAJ,CAAayB,MAAb,CAAP;AACD;;AAED,SAASI,WAAT,CAAsBC,GAAtB,EAA2B;AACzB,MAAMC,MAAM,IAAIC,MAAJ,CAAW,iBAAX,EAA8B,GAA9B,CAAZ;AACA,MAAID,IAAIE,IAAJ,CAASH,GAAT,KAAiBA,IAAIV,OAAJ,CAAY,QAAZ,MAA0B,CAA/C,EAAkD;AAChD,WAAOU,GAAP;AACD,GAFD,MAEO;AACL,WAAO7B,KAAKiC,IAAL,CAAU,SAAV,EAAqBtB,QAAQuB,GAAR,EAArB,EAAoCL,GAApC,CAAP;AACD;AACF;;AAEDM,QAAQlC,UAAR,GAAqBA,UAArB;AACAkC,QAAQ9B,iBAAR,GAA4BA,iBAA5B;AACA8B,QAAQ7B,oBAAR,GAA+BA,oBAA/B;AACA6B,QAAQP,WAAR,GAAsBA,WAAtB","file":"util.js","sourcesContent":["const {Launcher} = require('chrome-launcher')\nconst path = require('path')\n\n// borrow from: http://qiita.com/saekis/items/c2b41cd8940923863791\nfunction escapeHtml (string) {\n  if (typeof string !== 'string') {\n    return string\n  }\n  return string.replace(/[&'`\"<>]/g, function (match) {\n    return {\n      '&': '&amp;',\n      '\\'': '&#x27;',\n      '`': '&#x60;',\n      '\"': '&quot;',\n      '<': '&lt;',\n      '>': '&gt;'\n    }[match]\n  })\n}\n\nfunction escapeSingleQuote (string) {\n  if (typeof string !== 'string') {\n    return string\n  }\n  return string.replace(/'/g, '\\\\\\'')\n}\n\nfunction createChromeLauncher (startingUrl, options) {\n  const flags = []\n  // TODO: Remove this after chrome60 is released.\n  flags.push('--disable-gpu')\n  // Lighthouse adds '--disable-setuid-sandbox' flag automatically.\n  // The flag causes an error on linux when staring headless chrome.\n  // '--no-sandbox' suppresses an error caused by '--disable-setuid-sandbox'.\n  if (process.platform === 'linux') {\n    flags.push('--no-sandbox')\n  }\n  if (!options.visible) {\n    flags.push('--headless')\n    flags.push('--hide-scrollbars')\n  }\n  if (options.chromeFlags && Array.isArray(options.chromeFlags)) {\n    options.chromeFlags.forEach(f => {\n      if (f.indexOf('--') === -1) {\n        throw new Error('An item of chromFlags option must have \"--\" at start of itself. the value: ' + f)\n      }\n      flags.push(f)\n    })\n  }\n  if (options.additionalChromeFlags && Array.isArray(options.additionalChromeFlags)) {\n    console.warn('[chromy] additionalChromeFlags is deprecated. Use chromeFlags instead of this.')\n    options.additionalChromeFlags.forEach(f => {\n      if (f.indexOf('--') === -1) {\n        throw new Error('An item of chromFlags option must have \"--\" at start of itself. the value: ' + f)\n      }\n      flags.push(f)\n    })\n  }\n  const params = {\n    port: options.port,\n    chromeFlags: flags,\n    startingUrl: startingUrl,\n    logLevel: 'error'\n  }\n  if (options.chromePath) {\n    params.chromePath = options.chromePath\n  }\n  return new Launcher(params)\n}\n\nfunction completeUrl (url) {\n  const reg = new RegExp('^(?:[a-z]+:)?//', 'i')\n  if (reg.test(url) || url.indexOf('about:') === 0) {\n    return url\n  } else {\n    return path.join('file://', process.cwd(), url)\n  }\n}\n\nexports.escapeHtml = escapeHtml\nexports.escapeSingleQuote = escapeSingleQuote\nexports.createChromeLauncher = createChromeLauncher\nexports.completeUrl = completeUrl\n\n"]}