{"version":3,"sources":["../src/index.js"],"names":["fs","require","CDP","uuidV4","devices","sharp","createFullscreenEmulationManager","Document","TimeoutError","GotoTimeoutError","WaitTimeoutError","EvaluateTimeoutError","EvaluateError","escapeHtml","escapeSingleQuote","createChromeLauncher","completeUrl","instances","instanceId","makeSendToChromy","uuid","defaultTargetFunction","targets","filter","t","type","shift","Chromy","options","defaults","host","port","launchBrowser","chromeFlags","chromePath","activateOnStartUp","waitTimeout","gotoTimeout","loadTimeout","evaluateTimeout","waitFunctionPollingInterval","typeInterval","target","Object","assign","cdpOptions","client","launcher","messagePrefix","emulateMode","currentEmulateDeviceName","userAgentBeforeEmulate","startingUrl","launch","res","pid","Error","push","Promise","resolve","reject","DOM","Network","Page","Runtime","Console","all","enable","_getTargetIdFromOption","targetId","Target","activateTarget","userAgent","headers","_activateOnDocumentUpdatedListener","on","err","catch","e","getTargets","result","page","targetInfos","close","kill","i","ua","_checkStart","setUserAgentOverride","setExtraHTTPHeaders","callback","messageAdded","payload","msg","message","text","pre","substring","length","apply","console","warn","f","defineFunction","sendToChromy","data","JSON","parse","url","defaultOptions","waitLoadEvent","_waitFinish","navigate","loadEventFired","promise","evaluate","expression","ignoreCache","scriptToEvaluateOnLoad","reload","def","funcs","Array","isArray","_moduleToFunctionSources","toString","module","funcName","func","src","trim","expr","value","characters","split","c","Input","dispatchKeyEvent","sleep","x","y","opts","dispatchMouseEvent","button","time","Date","now","timestamp","synthesizeTapGesture","tapCount","selector","files","paramFiles","getDocument","root","querySelector","nodeId","fileNodeId","setFileInputFiles","format","quality","undefined","fromSurface","indexOf","captureScreenshot","Buffer","from","model","emulation","emulate","screenshot","info","browserInfo","devicePixelRatio","s","metadata","m1","newWidth","parseInt","width","newHeight","height","resize","toBuffer","reset","getBoundingClientRect","rect","window","pixelRatio","scroll","left","top","actualRect","clipRect","Math","floor","buffer","meta","extract","selectors","useQuerySelectorAll","screenshotDocument","fullscreenBuffer","selIdx","rects","getBoundingClientRectAll","r","reason","rectIdx","printToPDF","screencastFrame","screencastFrameAck","sessionId","startScreencast","stopScreencast","responseReceived","file","readFile","encoding","script","replace","style","deviceName","device","Emulation","setDeviceMetricsOverride","deviceScaleFactor","mobile","fitWindow","scale","pageScaleFactor","platform","setTouchEmulationEnabled","enabled","configuration","clearDeviceMetricsOverride","urls","setBlockedURLs","clearBrowserCache","params","setCookie","name","deleteCookie","cookieName","clearBrowserCookies","Memory","getDOMCounters","origin","location","Storage","clearDataForOrigin","storageTypes","start","copy","concat","promises","map","exports"],"mappings":"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","file":"index.js","sourcesContent":["const fs = require('fs')\n\nconst CDP = require('chrome-remote-interface')\nconst uuidV4 = require('uuid/v4')\nconst devices = require('./devices')\nconst sharp = require('sharp')\nconst {createFullscreenEmulationManager} = require('./emulation')\n\nconst Document = require('./document')\n\nconst {\n  TimeoutError,\n  GotoTimeoutError,\n  WaitTimeoutError,\n  EvaluateTimeoutError,\n  EvaluateError\n} = require('./error')\nconst {\n  escapeHtml,\n  escapeSingleQuote,\n  createChromeLauncher,\n  completeUrl\n} = require('./util')\n\nlet instances = []\nlet instanceId = 1\n\nfunction makeSendToChromy (uuid) {\n  return `\n  function () {\n    console.info('${uuid}:' + JSON.stringify(arguments))\n  }\n  `\n}\n\nfunction defaultTargetFunction (targets) {\n  return targets.filter(t => t.type === 'page').shift()\n}\n\nclass Chromy extends Document {\n  constructor (options = {}) {\n    super(null, null, null)\n    const defaults = {\n      host: 'localhost',\n      port: 9222,\n      launchBrowser: true,\n      chromeFlags: [],\n      chromePath: null,\n      activateOnStartUp: true,\n      waitTimeout: 30000,\n      gotoTimeout: 30000,\n      loadTimeout: 30000,\n      evaluateTimeout: 30000,\n      waitFunctionPollingInterval: 100,\n      typeInterval: 20,\n      target: defaultTargetFunction\n    }\n    this.options = Object.assign({}, defaults, options)\n    this.cdpOptions = {\n      host: this.options.host,\n      port: this.options.port,\n      target: this.options.target\n    }\n    this.client = null\n    this.launcher = null\n    this.messagePrefix = null\n    this.emulateMode = false\n    this.currentEmulateDeviceName = null\n    this.userAgentBeforeEmulate = null\n    this.instanceId = instanceId++\n  }\n\n  async start (startingUrl = null) {\n    if (startingUrl === null) {\n      startingUrl = 'about:blank'\n    }\n    if (this.client !== null) {\n      return\n    }\n    if (this.options.launchBrowser) {\n      if (this.launcher === null) {\n        this.launcher = createChromeLauncher(completeUrl(startingUrl), this.options)\n      }\n      const res = await this.launcher.launch()\n      if (!this.launcher.pid) {\n        throw new Error('Failed to launch a browser.')\n      }\n      instances.push(this)\n    }\n    await new Promise((resolve, reject) => {\n      CDP(this.cdpOptions, async (client) => {\n        try {\n          this.client = client\n          const {DOM, Network, Page, Runtime, Console} = client\n          await Promise.all([DOM.enable(), Network.enable(), Page.enable(), Runtime.enable(), Console.enable()])\n\n          // activate first tab\n          if (this.options.activateOnStartUp) {\n            let targetId = await this._getTargetIdFromOption()\n            await this.client.Target.activateTarget({targetId: targetId})\n          }\n\n          if ('userAgent' in this.options) {\n            await this.userAgent(this.options.userAgent)\n          }\n          if ('headers' in this.options) {\n            await this.headers(this.options.headers)\n          }\n          this._activateOnDocumentUpdatedListener()\n          resolve(this)\n        } catch (e) {\n          reject(e)\n        }\n      }).on('error', (err) => {\n        reject(err)\n      })\n    }).catch(e => {\n      throw e\n    })\n  }\n\n  async _getTargetIdFromOption () {\n    if (typeof this.options.target === 'function') {\n      const result = await this.client.Target.getTargets()\n      const page = this.options.target(result.targetInfos)\n      return page.targetId\n    } else if (typeof this.options.target === 'object') {\n      return this.options.target.targetId\n    } else if (typeof this.options.target === 'string') {\n      return this.options.target\n    } else {\n      throw new Error('type of `target` option is invalid.')\n    }\n  }\n\n  async close () {\n    if (this.client === null) {\n      return false\n    }\n    await this.client.close()\n    this.client = null\n    if (this.launcher !== null) {\n      await this.launcher.kill()\n      this.launcher = null\n    }\n    instances = instances.filter(i => i.instanceId !== this.instanceId)\n    return true\n  }\n\n  static async cleanup () {\n    const copy = [].concat(instances)\n    const promises = copy.map(i => i.close())\n    await Promise.all(promises)\n  }\n\n  async getPageTargets () {\n    const result = await this.client.Target.getTargets()\n    return result.targetInfos.filter(t => t.type === 'page')\n  }\n\n  async userAgent (ua) {\n    await this._checkStart()\n    return await this.client.Network.setUserAgentOverride({'userAgent': ua})\n  }\n\n  /**\n   * Example:\n   * chromy.headers({'X-Requested-By': 'foo'})\n   */\n  async headers (headers) {\n    await this._checkStart()\n    return await this.client.Network.setExtraHTTPHeaders({'headers': headers})\n  }\n\n  async console (callback) {\n    await this._checkStart()\n    this.client.Console.messageAdded((payload) => {\n      try {\n        const msg = payload.message.text\n        const pre = this.messagePrefix\n        if (typeof msg !== 'undefined') {\n          if (pre === null || msg.substring(0, pre.length + 1) !== pre + ':') {\n            callback.apply(this, [msg, payload.message])\n          }\n        }\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n  }\n\n  async receiveMessage (callback) {\n    await this._checkStart()\n    const uuid = uuidV4()\n    this.messagePrefix = uuid\n    const f = makeSendToChromy(this.messagePrefix)\n    this.defineFunction({sendToChromy: f})\n    this.client.Console.messageAdded((payload) => {\n      try {\n        const msg = payload.message.text\n        if (msg && msg.substring(0, uuid.length + 1) === uuid + ':') {\n          const data = JSON.parse(msg.substring(uuid.length + 1))\n          callback.apply(this, [data])\n        }\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n  }\n\n  async goto (url, options) {\n    const defaultOptions = {\n      waitLoadEvent: true\n    }\n    options = Object.assign({}, defaultOptions, options)\n    await this._checkStart(url)\n    try {\n      await this._waitFinish(this.options.gotoTimeout, async () => {\n        await this.client.Page.navigate({url: completeUrl(url)})\n        if (options.waitLoadEvent) {\n          await this.client.Page.loadEventFired()\n        }\n      })\n    } catch (e) {\n      if (e instanceof TimeoutError) {\n        throw new GotoTimeoutError('goto() timeout')\n      } else {\n        throw e\n      }\n    }\n  }\n\n  async waitLoadEvent () {\n    await this._waitFinish(this.options.loadTimeout, async () => {\n      await this.client.Page.loadEventFired()\n    })\n  }\n\n  async forward () {\n    const f = 'window.history.forward()'\n    const promise = this.waitLoadEvent()\n    await this.client.Runtime.evaluate({expression: f})\n    await promise\n  }\n\n  async back () {\n    const f = 'window.history.back()'\n    const promise = this.waitLoadEvent()\n    await this.client.Runtime.evaluate({expression: f})\n    await promise\n  }\n\n  async reload (ignoreCache, scriptToEvaluateOnLoad) {\n    await this.client.Page.reload({ignoreCache, scriptToEvaluateOnLoad})\n  }\n\n  /**\n   * define function\n   *\n   * @param func {(function|string|Array.<function>|Array.<string>)}\n   * @returns {Promise.<void>}\n   */\n  async defineFunction (def) {\n    let funcs = []\n    if (Array.isArray(def)) {\n      funcs = def\n    } else if ((typeof def) === 'object') {\n      funcs = this._moduleToFunctionSources(def)\n    } else {\n      funcs.push(def)\n    }\n    for (let i = 0; i < funcs.length; i++) {\n      let f = funcs[i]\n      if ((typeof f) === 'function') {\n        f = f.toString()\n      }\n      await this.client.Runtime.evaluate({expression: f})\n    }\n  }\n\n  _moduleToFunctionSources (module) {\n    const result = []\n    for (let funcName in module) {\n      let func = module[funcName]\n      let src = `function ${funcName} () { return (${func.toString()})(...arguments) }`.trim()\n      result.push(src)\n    }\n    return result\n  }\n\n  async type (expr, value) {\n    await this.evaluate('document.querySelector(\"' + expr + '\").focus()')\n    const characters = value.split('')\n    for (let i in characters) {\n      const c = characters[i]\n      await this.client.Input.dispatchKeyEvent({type: 'char', text: c})\n      await this.sleep(this.options.typeInterval)\n    }\n  }\n\n  async mouseMoved (x, y, options = {}) {\n    const opts = Object.assign({type: 'mouseMoved', x: x, y: y}, options)\n    await this.client.Input.dispatchMouseEvent(opts)\n  }\n\n  async mousePressed (x, y, options = {}) {\n    const opts = Object.assign({type: 'mousePressed', x: x, y: y, button: 'left'}, options)\n    await this.client.Input.dispatchMouseEvent(opts)\n  }\n\n  async mouseReleased (x, y, options = {}) {\n    const opts = Object.assign({type: 'mouseReleased', x: x, y: y, button: 'left'}, options)\n    await this.client.Input.dispatchMouseEvent(opts)\n  }\n\n  async tap (x, y, options = {}) {\n    const time = Date.now() / 1000\n    const opts = Object.assign({x: x, y: y, timestamp: time, button: 'left'}, options)\n    await this.client.Input.synthesizeTapGesture(opts)\n  }\n\n  async doubleTap (x, y, options = {}) {\n    const time = Date.now() / 1000\n    const opts = Object.assign({x: x, y: y, timestamp: time, button: 'left', tapCount: 2}, options)\n    await this.client.Input.synthesizeTapGesture(opts)\n  }\n\n  async setFile (selector, files) {\n    let paramFiles = files\n    if ((typeof files) === 'string') {\n      paramFiles = [files]\n    }\n    if (paramFiles.length === 0) {\n      return\n    }\n    const {root} = await this.client.DOM.getDocument()\n    const {nodeId: fileNodeId} = await this.client.DOM.querySelector({\n      nodeId: root.nodeId,\n      selector: selector\n    })\n    if (!fileNodeId) {\n      return\n    }\n    await this.client.DOM.setFileInputFiles({\n      nodeId: fileNodeId,\n      files: paramFiles\n    })\n  }\n\n  async screenshot (format = 'png', quality = undefined, fromSurface = true) {\n    if (['png', 'jpeg'].indexOf(format) === -1) {\n      throw new Error('format is invalid.')\n    }\n    const {data} = await this.client.Page.captureScreenshot({\n      format: format,\n      quality: quality,\n      fromSurface: fromSurface\n    })\n    return Buffer.from(data, 'base64')\n  }\n\n  /*\n   * Limitation:\n   * maximum height is 16384px because of chrome's bug from Skia library.\n   * https://groups.google.com/a/chromium.org/d/msg/headless-dev/DqaAEXyzvR0/kUTEqNYiDQAJ\n   * https://stackoverflow.com/questions/44599858/max-height-of-16-384px-for-headless-chrome-screenshots\n   */\n  async screenshotDocument (model = 'scroll', format = 'png', quality = undefined, fromSurface = true) {\n    const emulation = await createFullscreenEmulationManager(this, model)\n\n    let result = null\n    try {\n      await emulation.emulate()\n      result = await this.screenshot(format, quality, fromSurface)\n      const info = emulation.browserInfo\n      if (info.devicePixelRatio !== 1) {\n        let s = sharp(result)\n        let m1 = await s.metadata()\n        const newWidth = parseInt(m1.width / info.devicePixelRatio)\n        const newHeight = parseInt(m1.height / info.devicePixelRatio)\n        result = await s.resize(newWidth, newHeight).toBuffer()\n      }\n    } finally {\n      await emulation.reset()\n      // restore emulation mode\n      if (this.currentEmulateDeviceName !== null) {\n        await this.emulate(this.currentEmulateDeviceName)\n      }\n    }\n    return result\n  }\n\n  async screenshotSelector (selector, format = 'png', quality = undefined, fromSurface = true) {\n    const rect = await this.getBoundingClientRect(selector)\n    if (!rect) {\n      return null\n    }\n    const pixelRatio = await this.evaluate(function () {\n      return window.devicePixelRatio\n    })\n\n    // scroll to element\n    await this.scroll(rect.left, rect.top)\n\n    // capture screenshot and crop it.\n    const actualRect = await this.getBoundingClientRect(selector)\n    if (!actualRect || actualRect.width === 0) {\n      return null\n    }\n    const clipRect = {\n      top: Math.floor(actualRect.top * pixelRatio),\n      left: Math.floor(actualRect.left * pixelRatio),\n      width: Math.floor(actualRect.width * pixelRatio),\n      height: Math.floor(actualRect.height * pixelRatio)\n    }\n    const buffer = await this.screenshot(format, quality, fromSurface)\n    const meta = await sharp(buffer).metadata()\n    if (meta.width < clipRect.left + clipRect.width) {\n      clipRect.width = meta.width - clipRect.left\n    }\n    if (meta.height < clipRect.top + clipRect.height) {\n      clipRect.height = meta.height - clipRect.top\n    }\n    return sharp(buffer).extract(clipRect).toBuffer()\n  }\n\n  async screenshotMultipleSelectors (selectors, callback, options = {}) {\n    const defaults = {\n      model: 'scroll',\n      format: 'png',\n      quality: undefined,\n      fromSurface: true,\n      useQuerySelectorAll: false\n    }\n    const opts = Object.assign({}, defaults, options)\n    const fullscreenBuffer = await this.screenshotDocument(opts.model, opts.format, opts.quality, opts.fromSurface)\n    const meta = await sharp(fullscreenBuffer).metadata()\n    const emulation = await createFullscreenEmulationManager(this, 'scroll')\n    await emulation.emulate()\n    try {\n      for (let selIdx = 0; selIdx < selectors.length; selIdx++) {\n        let selector = selectors[selIdx]\n        try {\n          let rects = null\n          if (opts.useQuerySelectorAll) {\n            rects = await this.getBoundingClientRectAll(selector)\n            // remove elements that has 'display: none'\n            rects = rects.filter(rect => rect.width !== 0)\n          } else {\n            const r = await this.getBoundingClientRect(selector)\n            if (r && r.width !== 0) {\n              rects = [r]\n            }\n          }\n          if (rects.length === 0) {\n            const err = {reason: 'notfound', message: `selector is not found. selector=${selector}`}\n            await callback.apply(this, [err, null, selIdx, selectors])\n            continue\n          }\n          for (let rectIdx = 0; rectIdx < rects.length; rectIdx++) {\n            const rect = rects[rectIdx]\n\n            if (rect.top >= meta.height || rect.left >= meta.width) {\n              const err = {\n                reason: 'limitation',\n                message: `top of selector is over the limitation of height. selector=${selector}`\n              }\n              await callback.apply(this, [err, null, selIdx, selectors])\n              continue\n            }\n            if (meta.width < rect.left + rect.width) {\n              rect.width = meta.width - rect.left\n            }\n            if (meta.height < rect.top + rect.height) {\n              rect.height = meta.height - rect.top\n            }\n\n            const buffer = await sharp(fullscreenBuffer).extract(rect).toBuffer()\n            await callback.apply(this, [null, buffer, selIdx, selectors, rectIdx])\n          }\n        } catch (e) {\n          await callback.apply(this, [e, null, selIdx, selectors])\n        }\n      }\n    } finally {\n      await emulation.reset()\n    }\n  }\n\n  async pdf (options = {}) {\n    const {data} = await this.client.Page.printToPDF(options)\n    return Buffer.from(data, 'base64')\n  }\n\n  async startScreencast (callback, options = {}) {\n    await this.client.Page.screencastFrame(async (payload) => {\n      await callback.apply(this, [payload])\n      await this.client.Page.screencastFrameAck({sessionId: payload.sessionId})\n    })\n    await this.client.Page.startScreencast(options)\n  }\n\n  async stopScreencast () {\n    await this.client.Page.stopScreencast()\n  }\n\n  async requestWillBeSent (callback) {\n    await this._checkStart()\n    await this.client.Network.responseReceived(callback)\n  }\n\n  async inject (type, file) {\n    const data = await new Promise((resolve, reject) => {\n      fs.readFile(file, {encoding: 'utf-8'}, (err, data) => {\n        if (err) reject(err)\n        resolve(data)\n      })\n    }).catch(e => {\n      throw e\n    })\n    if (type === 'js') {\n      let script = data.replace(/\\\\/g, '\\\\\\\\').replace(/'/g, '\\\\\\'').replace(/(\\r|\\n)/g, '\\\\n')\n      let expr = `\n      {\n         let script = document.createElement('script')\n         script.type = 'text/javascript'\n         script.innerHTML = '${script}'\n         document.body.appendChild(script)\n      }\n      `\n      return this.evaluate(expr)\n    } else if (type === 'css') {\n      let style = data.replace(/`/g, '\\\\`').replace(/\\\\/g, '\\\\\\\\') // .replace(/(\\r|\\n)/g, ' ')\n      let expr = `\n      {\n         let style = document.createElement('style')\n         style.type = 'text/css'\n         style.innerText = \\`\n        ${style}\n        \\`\n         document.head.appendChild(style)\n      }\n      `\n      return this.evaluate(expr)\n    } else {\n      throw new Error('found invalid type.')\n    }\n  }\n\n  async emulate (deviceName) {\n    await this._checkStart()\n\n    if (!this.emulateMode) {\n      this.userAgentBeforeEmulate = await this.evaluate('return navigator.userAgent')\n    }\n    const device = devices[deviceName]\n    await this.client.Emulation.setDeviceMetricsOverride({\n      width: device.width,\n      height: device.height,\n      deviceScaleFactor: device.deviceScaleFactor,\n      mobile: device.mobile,\n      fitWindow: false,\n      scale: device.pageScaleFactor\n    })\n    const platform = device.mobile ? 'mobile' : 'desktop'\n    await this.client.Emulation.setTouchEmulationEnabled({enabled: true, configuration: platform})\n    await this.userAgent(device.userAgent)\n    this.currentEmulateDeviceName = deviceName\n    this.emulateMode = true\n  }\n\n  async clearEmulate () {\n    await this.client.Emulation.clearDeviceMetricsOverride()\n    await this.client.Emulation.setTouchEmulationEnabled({enabled: false})\n    if (this.userAgentBeforeEmulate) {\n      await this.userAgent(this.userAgentBeforeEmulate)\n    }\n    this.emulateMode = false\n    this.currentEmulateDeviceName = null\n  }\n\n  async blockUrls (urls) {\n    await this._checkStart()\n    await this.client.Network.setBlockedURLs({urls: urls})\n  }\n\n  async clearBrowserCache () {\n    await this._checkStart()\n    await this.client.Network.clearBrowserCache()\n  }\n\n  async setCookie (params) {\n    await this._checkStart()\n    await this.client.Network.setCookie(params)\n  }\n\n  async deleteCookie (name, url) {\n    await this._checkStart()\n    await this.client.Network.deleteCookie({cookieName: name, url: url})\n  }\n\n  async clearAllCookies () {\n    await this._checkStart()\n    await this.client.Network.clearBrowserCookies()\n  }\n\n  async getDOMCounters () {\n    return await this.client.Memory.getDOMCounters()\n  }\n\n  async clearDataForOrigin (origin = null, type = 'all') {\n    if (origin === null) {\n      origin = await this.evaluate(_ => { return location.origin })\n    }\n    return await this.client.Storage.clearDataForOrigin({origin: origin, storageTypes: type})\n  }\n\n  async _checkStart (startingUrl = null) {\n    if (this.client === null) {\n      await this.start(startingUrl)\n    }\n  }\n}\n\nmodule.exports = Chromy\n\n"]}